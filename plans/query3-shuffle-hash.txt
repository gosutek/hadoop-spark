== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- ShuffledHashJoin [ZIPcode#125], [Zip Code#90], LeftSemi, BuildRight
   :- Exchange hashpartitioning(ZIPcode#125, 200), ENSURE_REQUIREMENTS, [plan_id=102]
   :  +- Project [LAT#113, LON#114, cast(regexp_extract(ZIPCode#115, (\d+)[-]*(\d*), 1) as int) AS ZIPCode#125]
   :     +- Filter isnotnull(cast(regexp_extract(ZIPCode#115, (\d+)[-]*(\d*), 1) as int))
   :        +- FileScan csv [LAT#113,LON#114,ZIPcode#115] Batched: false, DataFilters: [isnotnull(cast(regexp_extract(ZIPcode#115, (\d+)[-]*(\d*), 1) as int))], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://advdb-master:54310/user/master/other_data/revgecoding.csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<LAT:double,LON:double,ZIPcode:string>
   +- Exchange hashpartitioning(Zip Code#90, 200), ENSURE_REQUIREMENTS, [plan_id=103]
      +- Union
         :- Filter isnotnull(Zip Code#90)
         :  +- TakeOrderedAndProject(limit=3, orderBy=[Estimated Median Income#129 ASC NULLS FIRST], output=[Zip Code#90])
         :     +- Project [Zip Code#90, cast(regexp_replace(Estimated Median Income#92, [$,], , 1) as int) AS Estimated Median Income#129]
         :        +- FileScan csv [Zip Code#90,Estimated Median Income#92] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://advdb-master:54310/user/master/other_data/LA_income_2015.csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Zip Code:int,Estimated Median Income:string>
         +- Filter isnotnull(Zip Code#134)
            +- TakeOrderedAndProject(limit=3, orderBy=[Estimated Median Income#129 DESC NULLS LAST], output=[Zip Code#134])
               +- Project [Zip Code#134, cast(regexp_replace(Estimated Median Income#136, [$,], , 1) as int) AS Estimated Median Income#129]
                  +- FileScan csv [Zip Code#134,Estimated Median Income#136] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://advdb-master:54310/user/master/other_data/LA_income_2015.csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Zip Code:int,Estimated Median Income:string>


== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- ShuffledHashJoin [knownfloatingpointnormalized(normalizenanandzero(cast(LAT#43 as double))), knownfloatingpointnormalized(normalizenanandzero(cast(LON#44 as double)))], [knownfloatingpointnormalized(normalizenanandzero(LAT#113)), knownfloatingpointnormalized(normalizenanandzero(LON#114))], LeftSemi, BuildRight
   :- Exchange hashpartitioning(knownfloatingpointnormalized(normalizenanandzero(cast(LAT#43 as double))), knownfloatingpointnormalized(normalizenanandzero(cast(LON#44 as double))), 200), ENSURE_REQUIREMENTS, [plan_id=173]
   :  +- Filter ((((isnotnull(Date Rptd#18) AND (year(cast(Date Rptd#18 as date)) = 2015)) AND isnotnull(Vict Descent#30)) AND isnotnull(LAT#43)) AND isnotnull(LON#44))
   :     +- FileScan csv [DR_NO#17,Date Rptd#18,DATE OCC#19,TIME OCC#20,AREA#21,AREA NAME#22,Rpt Dist No#23,Part 1-2#24,Crm Cd#25,Crm Cd Desc#26,Mocodes#27,Vict Age#28,Vict Sex#29,Vict Descent#30,Premis Cd#31,Premis Desc#32,Weapon Used Cd#33,Weapon Desc#34,Status#35,Status Desc#36,Crm Cd 1#37,Crm Cd 2#38,Crm Cd 3#39,Crm Cd 4#40,... 4 more fields] Batched: false, DataFilters: [isnotnull(Date Rptd#18), (year(cast(Date Rptd#18 as date)) = 2015), isnotnull(Vict Descent#30), ..., Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://advdb-master:54310/user/master/exports], PartitionFilters: [], PushedFilters: [IsNotNull(Date Rptd), IsNotNull(Vict Descent), IsNotNull(LAT), IsNotNull(LON)], ReadSchema: struct<DR_NO:string,Date Rptd:string,DATE OCC:string,TIME OCC:string,AREA:string,AREA NAME:string...
   +- Exchange hashpartitioning(knownfloatingpointnormalized(normalizenanandzero(LAT#113)), knownfloatingpointnormalized(normalizenanandzero(LON#114)), 200), ENSURE_REQUIREMENTS, [plan_id=174]
      +- Project [LAT#113, LON#114]
         +- ShuffledHashJoin [ZIPcode#125], [Zip Code#90], LeftSemi, BuildRight
            :- Exchange hashpartitioning(ZIPcode#125, 200), ENSURE_REQUIREMENTS, [plan_id=167]
            :  +- Project [LAT#113, LON#114, cast(regexp_extract(ZIPCode#115, (\d+)[-]*(\d*), 1) as int) AS ZIPCode#125]
            :     +- Filter ((isnotnull(cast(regexp_extract(ZIPCode#115, (\d+)[-]*(\d*), 1) as int)) AND isnotnull(LAT#113)) AND isnotnull(LON#114))
            :        +- FileScan csv [LAT#113,LON#114,ZIPcode#115] Batched: false, DataFilters: [isnotnull(cast(regexp_extract(ZIPcode#115, (\d+)[-]*(\d*), 1) as int)), isnotnull(LAT#113), isno..., Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://advdb-master:54310/user/master/other_data/revgecoding.csv], PartitionFilters: [], PushedFilters: [IsNotNull(LAT), IsNotNull(LON)], ReadSchema: struct<LAT:double,LON:double,ZIPcode:string>
            +- Exchange hashpartitioning(Zip Code#90, 200), ENSURE_REQUIREMENTS, [plan_id=168]
               +- Union
                  :- Filter isnotnull(Zip Code#90)
                  :  +- TakeOrderedAndProject(limit=3, orderBy=[Estimated Median Income#129 ASC NULLS FIRST], output=[Zip Code#90])
                  :     +- Project [Zip Code#90, cast(regexp_replace(Estimated Median Income#92, [$,], , 1) as int) AS Estimated Median Income#129]
                  :        +- FileScan csv [Zip Code#90,Estimated Median Income#92] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://advdb-master:54310/user/master/other_data/LA_income_2015.csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Zip Code:int,Estimated Median Income:string>
                  +- Filter isnotnull(Zip Code#134)
                     +- TakeOrderedAndProject(limit=3, orderBy=[Estimated Median Income#129 DESC NULLS LAST], output=[Zip Code#134])
                        +- Project [Zip Code#134, cast(regexp_replace(Estimated Median Income#136, [$,], , 1) as int) AS Estimated Median Income#129]
                           +- FileScan csv [Zip Code#134,Estimated Median Income#136] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://advdb-master:54310/user/master/other_data/LA_income_2015.csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Zip Code:int,Estimated Median Income:string>
